{"version":3,"sources":["screens/project-list/search-panel.tsx","screens/project-list/list.tsx","utils/index.ts","screens/project-list/index.tsx","screens/ts-react-test/index.tsx","screens/login/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SearchPanel","props","value","param","name","onChange","evt","setParam","target","personId","users","map","user","id","List","list","project","find","useMount","callback","useEffect","ProjectListScreen","useState","setUsers","setList","debounceDParam","delay","debouncedValue","setDebounceValue","timeout","setTimeout","clearTimeout","useDebounce","console","log","axios","get","qs","stringify","object","result","Object","keys","forEach","key","cleanObject","then","response","data","TsReactTest","initialArray","setValue","add","item","clear","removeIndex","index","copy","splice","useArray","age","onClick","style","marginBottom","person","LoginScreen","onSubmit","event","preventDefault","username","currentTarget","elements","password","method","headers","JSON","htmlFor","type","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb0756ef.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nexport interface User {\n  id: string;\n  name: string;\n  email: string;\n  title: string;\n  organization: string;\n}\n\ninterface SearchPanelProps {\n  users: User[];\n  param: {\n    name: string;\n    personId: string;\n  };\n  setParam: (param: SearchPanelProps[\"param\"]) => void;\n}\n\nexport const SearchPanel = (props: SearchPanelProps) => {\n  return (\n    <form>\n      <div>\n        {/*等价于setParam((Object.assign({},param,{name:evt.target.value})))*/}\n        <input\n          value={props.param.name}\n          onChange={(evt) => {\n            props.setParam({\n              ...props.param,\n              name: evt.target.value,\n            });\n          }}\n        />\n        <select\n          value={props.param.personId}\n          onChange={(evt) =>\n            props.setParam({\n              ...props.param,\n              personId: evt.target.value,\n            })\n          }\n        >\n          <option value={\"\"}>负责人</option>\n          {props.users.map((user) => (\n            <option key={user.id} value={user.id}>\n              {user.name}\n            </option>\n          ))}\n        </select>\n      </div>\n    </form>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { User } from \"./search-panel\";\n\ninterface Project {\n  id: string;\n  name: string;\n  personId: string;\n  pin: boolean;\n  organization: string;\n}\n\ninterface ListProps {\n  list: Project[];\n  users: User[];\n}\n\nexport const List = (props: ListProps) => {\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>名称</th>\n          <th>负责人</th>\n        </tr>\n      </thead>\n      <tbody>\n        {props.list.map((project) => (\n          <tr key={project.id}>\n            <th>{project.name}</th>\n            <th>\n              {props.users.find((user) => user.id === project.personId)?.name ||\n                \"未知\"}\n            </th>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from \"react\";\n\nexport const isFalsy = (value: unknown) => (value === 0 ? false : !value);\n//在函数里，改变传入得对象本身是不好得\nexport const cleanObject = (object: object) => {\n  //Object.assign({},object)\n  const result = { ...object };\n  Object.keys(result).forEach((key) => {\n    // @ts-ignore\n    const value = result[key];\n    if (isFalsy(value)) {\n      // @ts-ignore\n      delete result[key];\n    }\n  });\n  return result;\n};\n\n//自定义hooks方法 抽离\nexport const useMount = (callback: () => void) => {\n  useEffect(() => {\n    callback();\n  }, []);\n};\n\n// const debounce=(func,delay)=>{\n//   let timeout;\n//   return (...ma)=>{\n//     if (timeout){\n//       clearTimeout(timeout)\n//     }\n//     timeout=setTimeout(function(){\n//       func()\n//     },delay)\n//   }\n// }\n// const log=debounce(()=>console.log('call'),5000)\n// log()\n// log()\n// log()\nexport const useDebounce = <T>(value: T, delay?: number) => {\n  const [debouncedValue, setDebounceValue] = useState(value);\n  useEffect(() => {\n    //每次value发生变化的时候，设置一个定时器\n    const timeout = setTimeout(() => setDebounceValue(value), delay);\n    //每次在上一个useEffect处理完以后在运行，负责清理上一次的定时任务\n    return () => clearTimeout(timeout);\n  }, [value, delay]);\n  return debouncedValue;\n};\n\nexport const useArray = <T>(initialArray: T[]) => {\n  const [value, setValue] = useState(initialArray);\n  return {\n    value,\n    setValue,\n    add: (item: T) => setValue([...value, item]),\n    clear: () => setValue([]),\n    removeIndex: (index: number) => {\n      const copy = [...value];\n      copy.splice(index, 1);\n      setValue(copy);\n    },\n  };\n};\n","import { SearchPanel } from \"./search-panel\";\nimport { List } from \"./list\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport qs from \"qs\";\nimport { cleanObject, useDebounce, useMount } from \"../../utils\";\n\nexport const ProjectListScreen = () => {\n  const [users, setUsers] = useState([]);\n\n  const [param, setParam] = useState({\n    name: \"\",\n    personId: \"\",\n  });\n  const [list, setList] = useState([]);\n  const debounceDParam = useDebounce(param, 2000);\n  useEffect(() => {\n    console.log(param);\n    axios\n      .get(\n        `http://localhost:9000/projects?${qs.stringify(\n          cleanObject(debounceDParam)\n        )}`\n      )\n      .then((response) => {\n        setList(response.data);\n      });\n  }, [debounceDParam]);\n  useMount(() => {\n    axios.get(\"http://localhost:9000/users\").then((response) => {\n      setUsers(response.data);\n    });\n  });\n  return (\n    <div>\n      <SearchPanel users={users} param={param} setParam={setParam} />\n      <List users={users} list={list} />\n    </div>\n  );\n};\n","import { useArray, useMount } from \"../../utils\";\nimport React from \"react\";\n\nexport const TsReactTest = () => {\n  const persons: { name: string; age: number }[] = [\n    { name: \"jack\", age: 25 },\n    { name: \"ma\", age: 25 },\n  ];\n  const { value, clear, removeIndex, add } = useArray(persons);\n  useMount(() => {});\n  return (\n    <div>\n      {/*点击新增*/}\n      <button onClick={() => add({ name: \"john\", age: 22 })}>add</button>\n      {/*点击删除第一项*/}\n      <button onClick={() => removeIndex(0)}>remove 0</button>\n      {/*    点击清空列表*/}\n      <button style={{ marginBottom: \"50px\" }} onClick={() => clear()}>\n        clear\n      </button>\n      {value.map((person, index) => (\n        <div key={index} style={{ marginBottom: \"30px\" }}>\n          <span>{index}</span>\n          <span>{person.name}</span>\n          <span>{person.age}</span>\n        </div>\n      ))}\n    </div>\n  );\n};\n","import React, { FormEvent } from \"react\";\nimport axios from \"axios\";\n\nexport const LoginScreen = () => {\n  const login = (param: { username: string; password: string }) => {\n    axios(\"http://localhost:9000/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      data: JSON.stringify(param),\n    }).then((response) => {});\n  };\n  const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault(); //阻止表单提交\n    const username = (event.currentTarget.elements[0] as HTMLInputElement)\n      .value;\n    const password = (event.currentTarget.elements[1] as HTMLInputElement)\n      .value;\n    login({ username, password });\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <label htmlFor={\"username\"}>用户名</label>\n        <input type={\"text\"} id={\"username\"} value={\"xiaoxiaopang\"} />\n      </div>\n      <div>\n        <label htmlFor={\"password\"}>用户名</label>\n        <input type={\"password\"} id={\"password\"} value={\"123456\"} />\n      </div>\n      <button type={\"submit\"}>登录</button>\n    </form>\n  );\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport { ProjectListScreen } from \"./screens/project-list\";\nimport { TsReactTest } from \"./screens/ts-react-test\";\nimport { LoginScreen } from \"./screens/login\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <LoginScreen></LoginScreen>\n        <ProjectListScreen />\n        <TsReactTest />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}